name: e2e

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '*.asciidoc'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '*.md'
      - '*.asciidoc'
      - 'docs/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  # (keep_serverless-staging-oblt, keep_serverless-qa-oblt or serverless-production-oblt)
  SERVERLESS_PROJECT: serverless-production-oblt
  # (staging, qa or pro)
  VAULT_SECRET_SUFFIX: pro

# NOTE: if you add a new job and it's a mandatory check then
#       update e2e-docs.yml
jobs:
  test:
    # If no PR event or if a PR event that's caused by a non-fork and non dependabot actor
    if: github.event_name != 'pull_request' || ( github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]' )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Bootstrap Action Workspace
        id: bootstrap
        uses: ./.github/workflows/bootstrap

      - uses: elastic/apm-pipeline-library/.github/actions/github-token@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}

      - uses: elastic/apm-pipeline-library/.github/actions/oblt-cli-cluster-credentials@current
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          cluster-name: ${{ env.SERVERLESS_PROJECT }}
          vault-url: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}

      - name: Get the browser email and password from Vault
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          method: approle
          secrets: |
            secret/observability-team/ci/elastic-cloud/observability-team-${{ env.VAULT_SECRET_SUFFIX }} username | E2E__BROWSEREMAIL ;
            secret/observability-team/ci/elastic-cloud/observability-team-${{ env.VAULT_SECRET_SUFFIX }} password | E2E__BROWSERPASSWORD
        
      - name: End-to-end tests
        run: ./build.sh test --test-suite=e2e
        env: 
          E2E__ENDPOINT: "${{env.ELASTIC_APM_SERVER_URL}}"
          E2E__AUTHORIZATION: "Authorization=ApiKey ${{env.ELASTIC_APM_API_KEY}}"

      - name: Upload Playwright traces
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-traces
          path: .artifacts/playwright-traces/*-screenshot.jpeg
          retention-days: 1
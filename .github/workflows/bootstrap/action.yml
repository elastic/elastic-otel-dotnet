---
name: Bootstrap Checkout
description: Ensures all actions bootstrap the same

outputs:
  agent-version:
    description: "The current agent version number"
    value: ${{ steps.dotnet.outputs.agent-version }}
  major-version:
    description: "The current major version number, semver"
    value: ${{ steps.dotnet.outputs.major-version }}
    
runs:
  using: "composite"
  steps:
    # Ensure we fetch all tags
    - shell: bash
      run: |
        git fetch --prune --unshallow --tags
        git tag --list
        
    - uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.[cf]sproj*') }}
        restore-keys: |
          ${{ runner.os }}-nuget
          
    # ensures we don't hit GitHub releases all the time to download the OpenTelemetry auto instrumentation assets
    # if not available they will be download in .artifacts/otel-distribution/{otel-version}
    - name: Cache OpenTelemetry Distribution
      uses: actions/cache@v4
      with:
        path: .artifacts/otel-distribution
        key: otel-distribution
    
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: ./global.json

    - name: Install Aspire workload
      shell: bash
      run: dotnet workload install aspire

    - id: dotnet
      shell: bash
      run: |
        dotnet --list-sdks
        dotnet tool restore
        AGENT_VERSION=$(dotnet minver -t=v -p=canary.0 -v=e)
        echo "Version Number: ${AGENT_VERSION}"
        echo "AGENT_VERSION=${AGENT_VERSION}" >> $GITHUB_ENV
        echo "agent-version=${AGENT_VERSION}" >> $GITHUB_OUTPUT
        echo "major-version=$(echo ${AGENT_VERSION} | cut -d"." -f1)" >> $GITHUB_OUTPUT

    # Setup git config
    - uses: elastic/oblt-actions/git/setup@v1